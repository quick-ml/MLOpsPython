trigger:
- main

pool:
  agent: 'mlopspool'

variables:
  - group: devopsforai-aml-vg
  
steps:
# Step 1: Install Terraform
- task: TerraformInstaller@0
  inputs:
    terraformVersion: 'latest'

# Step 2: Login to Azure using Service Principal
- task: AzureCLI@2
  inputs:
    azureSubscription: 'azure-resource-connection'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      echo "Logging in with Service Principal..."
      az login --service-principal -u $(ARM_CLIENT_ID) -p $(ARM_CLIENT_SECRET) --tenant $(ARM_TENANT_ID)

# Step 3: Initialize Terraform Backend
- script: |
    terraform init \
      -backend-config="storage_account_name=$(BASE_NAME)statestor" \
      -backend-config="container_name=tfstate-cont" \
      -backend-config="key=mlopsinfra.tfstate" \
      -backend-config="resource_group_name=$(RESOURCE_GROUP)" \
      -backend-config="client_id=$(ARM_CLIENT_ID)" \
      -backend-config="client_secret=$(ARM_CLIENT_SECRET)" \
      -backend-config="tenant_id=$(ARM_TENANT_ID)"
  workingDirectory: $(Build.SourcesDirectory)/environment_setup/tf-templates
  displayName: 'Terraform Init'

# Step 4: Terraform Plan
- script: |
    terraform plan -out=tfplan
  workingDirectory: $(Build.SourcesDirectory)/environment_setup/tf-templates
  displayName: 'Terraform Plan'

# Step 5: Terraform Apply
- script: |
    terraform apply -auto-approve tfplan
  workingDirectory: $(Build.SourcesDirectory)/environment_setup/tf-templates
  displayName: 'Terraform Apply'
